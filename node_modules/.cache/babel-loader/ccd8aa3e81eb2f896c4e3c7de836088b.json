{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\navjy\\\\Documents\\\\hazel\\\\src\\\\Tasks.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Events from './Events.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tasks() {\n  _s();\n\n  const dates = [1, 2, 3, 4, 5, 6, 7];\n  const months = [\"jan\", \"feb\", \"march\"];\n  var [arr, update] = useState([]);\n  var [date, updateDate] = useState(\"\");\n  var [event, updateEvent] = useState(\"\");\n\n  function getArr() {\n    for (let i = 0; i < months.length; i++) {\n      for (let j = 0; j < dates.length; j++) {\n        arr.push(dates[j] + \" \" + months[i]);\n        arr.push(\"empty\");\n      }\n    }\n    /*  if(arr.includes(date)){\r\n          var x = arr.indexOf(date);\r\n          console.log(\"found \" +date+\"!\");\r\n          console.log(x);\r\n          \r\n      } else{\r\n          console.log(\"Could not find\"+ date+\"!\");\r\n      }*/\n\n  }\n\n  function handleClick() {\n    console.log(\"li clicked!\");\n  }\n\n  function inputDate(d) {\n    console.log(d.target.value);\n    date = d.target.value;\n  }\n\n  function inputEvent(e) {\n    console.log(e.target.value);\n    event = e.target.value;\n  }\n\n  function showDesc(s) {\n    return s.date + \" \" + s.description + \" \";\n  }\n\n  function buttonClick() {\n    console.log(\"button clicked!\");\n    Events.push({\n      id: Events.length - 1,\n      date: date,\n      description: event\n    });\n    console.log(Events.map(showDesc));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasksContainer\",\n    children: [getArr(), Events.map(showDesc), arr.map(e => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: handleClick,\n        children: e\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 36\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: inputDate,\n        placeholder: \"Enter date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: inputEvent,\n        placeholder: \"Enter event description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: buttonClick,\n      children: \"Add event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tasks, \"Ytl8YraWBqhIqsLMtoYwbmJPMPs=\");\n\n_c = Tasks;\nexport default Tasks;\n/*\r\n1 jan 0\r\nnew task 1\r\n2 jan 2\r\nnew task 3\r\n3 jan 4\r\nnew task 5*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["C:/Users/navjy/Documents/hazel/src/Tasks.jsx"],"names":["React","useState","Events","Tasks","dates","months","arr","update","date","updateDate","event","updateEvent","getArr","i","length","j","push","handleClick","console","log","inputDate","d","target","value","inputEvent","e","showDesc","s","description","buttonClick","id","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Events from './Events.js';\r\n\r\nfunction Tasks(){\r\n\r\n    const dates = [1,2,3,4,5,6,7];\r\n    const months = [\"jan\", \"feb\", \"march\"];\r\n    var [arr, update] = useState([]);\r\n    var [date, updateDate] = useState(\"\");\r\n    var [event, updateEvent] = useState(\"\");\r\n\r\n    function getArr(){\r\n        for(let i = 0; i <months.length; i++){\r\n            for(let j = 0; j<dates.length; j++){\r\n                arr.push(dates[j] + \" \" + months[i]);    \r\n                arr.push(\"empty\");\r\n            }\r\n        }  \r\n\r\n      /*  if(arr.includes(date)){\r\n            var x = arr.indexOf(date);\r\n            console.log(\"found \" +date+\"!\");\r\n            console.log(x);\r\n            \r\n        } else{\r\n            console.log(\"Could not find\"+ date+\"!\");\r\n        }*/\r\n    }\r\n\r\n    function handleClick(){\r\n        console.log(\"li clicked!\");\r\n    }\r\n\r\n    function inputDate(d){\r\n        console.log(d.target.value);\r\n        date = d.target.value;\r\n    }\r\n\r\n    function inputEvent(e){\r\n        console.log(e.target.value);\r\n        event = e.target.value;\r\n    }\r\n\r\n    function showDesc(s){\r\n        return s.date+ \" \"+ s.description + \" \";\r\n    }\r\n\r\n    function buttonClick(){\r\n        console.log(\"button clicked!\");\r\n        Events.push({\r\n            id: Events.length-1,\r\n            date: date,\r\n            description: event\r\n        }); \r\n        console.log(Events.map(showDesc));\r\n    }\r\n\r\n    return(\r\n        <div className = \"tasksContainer\">\r\n            {getArr()}\r\n            {Events.map(showDesc)}\r\n            {arr.map((e) =>{return <li onClick = {handleClick}>{e}</li>})}\r\n            <form>\r\n                <input type=\"text\" onChange = {inputDate} placeholder = \"Enter date\"/>\r\n                <input type=\"text\" onChange = {inputEvent} placeholder = \"Enter event description\"/>\r\n            </form>\r\n            <button onClick={buttonClick}>Add event</button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Tasks;\r\n\r\n/*\r\n1 jan 0\r\nnew task 1\r\n2 jan 2\r\nnew task 3\r\n3 jan 4\r\nnew task 5*/"]},"metadata":{},"sourceType":"module"}